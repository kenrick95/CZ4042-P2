%cnnPreprocess('..\Images_Data_Clipped');

load 'dataTeststore.mat';
load 'dataTrainstore.mat';

imageDim = 28;

randn('seed', 42);
s = RandStream('mcg16807','Seed', 42);
RandStream.setGlobalStream(s);

layers = [imageInputLayer([imageDim imageDim]), ...
    convolution2dLayer([9, 9],20), ...
    averagePooling2dLayer(2), ...
    fullyConnectedLayer(10), ...
    softmaxLayer(), ...
    classificationLayer()];

lrs=[1e-1, 3e-2, 1e-2, 3e-3, 1e-3, 3e-4, 1e-4, 3e-5, 1e-5, 3e-6, 1e-6];
mbss=[50,100,150,200,250,300,350,400,450,500];
l2rs=[1e-1, 3e-2, 1e-2, 3e-3, 1e-3, 3e-4, 1e-4, 3e-5, 1e-5, 3e-6, 1e-6];
mmts=[0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95];

bestOptions = trainingOptions('sgdm', ... 
    'MaxEpochs', 25,...
    'InitialLearnRate', 3e-4, ...
    'MiniBatchSize', 500, ...
    'L2Regularization', 1e-4, ...
    'Momentum', 9e-1 ...
    );

for i=1:numel(lrs)
    options = trainingOptions('sgdm', ... 
        'MaxEpochs', bestOptions.MaxEpochs,...
        'InitialLearnRate', lrs(i), ...
        'MiniBatchSize', bestOptions.MiniBatchSize, ...
        'L2Regularization', bestOptions.L2Regularization, ...
        'Momentum', bestOptions.Momentum, ...
        'Verbose', 0 ...
        );

    convnet = trainNetwork(dataTrainstore,layers,options);

    YTest = classify(convnet, dataTeststore);
    TTest = dataTeststore.Labels;
    accuracy = sum(YTest == TTest)/numel(YTest);
    
    filename=sprintf('lrs-%d.mat', i);
    fprintf('%s %.6f\n', filename, accuracy);
    
    save(filename, 'convnet');
end

for i=1:numel(mbss)
    options = trainingOptions('sgdm', ... 
        'MaxEpochs', bestOptions.MaxEpochs,...
        'InitialLearnRate', bestOptions.InitialLearnRate, ...
        'MiniBatchSize', mbss(i), ...
        'L2Regularization', bestOptions.L2Regularization, ...
        'Momentum', bestOptions.Momentum, ...
        'Verbose', 0 ...
        );

    convnet = trainNetwork(dataTrainstore,layers,options);

    YTest = classify(convnet, dataTeststore);
    TTest = dataTeststore.Labels;
    accuracy = sum(YTest == TTest)/numel(YTest);
    
    filename=sprintf('mbss-%d.mat', i);
    fprintf('%s %.6f\n', filename, accuracy);
    
    save(filename, 'convnet');
end

for i=1:numel(l2rs)
    options = trainingOptions('sgdm', ... 
        'MaxEpochs', bestOptions.MaxEpochs,...
        'InitialLearnRate', bestOptions.InitialLearnRate, ...
        'MiniBatchSize', bestOptions.MiniBatchSize, ...
        'L2Regularization', l2rs(i), ...
        'Momentum', bestOptions.Momentum, ...
        'Verbose', 0 ...
        );

    convnet = trainNetwork(dataTrainstore,layers,options);

    YTest = classify(convnet, dataTeststore);
    TTest = dataTeststore.Labels;
    accuracy = sum(YTest == TTest)/numel(YTest);
    
    filename=sprintf('l2rs-%d.mat', i);
    fprintf('%s %.6f\n', filename, accuracy);
    
    save(filename, 'convnet');
end

for i=1:numel(mmts)
    options = trainingOptions('sgdm', ... 
        'MaxEpochs', bestOptions.MaxEpochs,...
        'InitialLearnRate', bestOptions.InitialLearnRate, ...
        'MiniBatchSize', bestOptions.MiniBatchSize, ...
        'L2Regularization', bestOptions.L2Regularization, ...
        'Momentum', mmts(i), ...
        'Verbose', 0 ...
        );

    convnet = trainNetwork(dataTrainstore,layers,options);

    YTest = classify(convnet, dataTeststore);
    TTest = dataTeststore.Labels;
    accuracy = sum(YTest == TTest)/numel(YTest);
    
    filename=sprintf('mmts-%d.mat', i);
    fprintf('%s %.6f\n', filename, accuracy);
    
    save(filename, 'convnet');
end

convnet = trainNetwork(dataTrainstore,layers,bestOptions);

YTest = classify(convnet, dataTeststore);
TTest = dataTeststore.Labels;
accuracy = sum(YTest == TTest)/numel(YTest);

filename=sprintf('best.mat');
fprintf('%s %.6f\n', filename, accuracy);

save(filename, 'convnet');

%autoencoderPreprocess('..\Images_Data_Clipped');

load 'dataTest.mat';
load 'dataTrain.mat';
load 'labelsTrain.mat';
load 'labelsTest.mat';

hiddenSize1 = 100;
hiddenSize2 = 50;
hiddenSize3 = 10;

maxEpochs = 2;                    % max 200
sparsityRegularization = 0.75;      % default: 1.00; 1 .. 10
sparsityProportion = 0.45;          % default: 0.05; 0.1 .. 0.3
encoderTransferFunction = 'logsig'; % default: logsig; use logsig
decoderTransferFunction = 'logsig'; % default: logsig; use logsig
useGpu = false;

randn('seed', 42);
s = RandStream('mcg16807','Seed', 42);
RandStream.setGlobalStream(s);

autoenc1 = trainAutoencoder(dataTrain, hiddenSize1, ...
    'MaxEpochs', maxEpochs, ...
    'SparsityRegularization', sparsityRegularization, ...
    'SparsityProportion', sparsityProportion, ...
    'EncoderTransferFunction', encoderTransferFunction, ...
    'DecoderTransferFunction', decoderTransferFunction, ...
    'UseGPU', useGpu);
save('autoenc1.mat', 'autoenc1');

figure(), plotWeights(autoenc1);
print('exp-f1','-dpng')


feat1 = encode(autoenc1, dataTrain);
autoenc2 = trainAutoencoder(feat1, hiddenSize2, ...
    'MaxEpochs', maxEpochs, ...
    'SparsityRegularization', sparsityRegularization, ...
    'SparsityProportion', sparsityProportion, ...
    'EncoderTransferFunction', encoderTransferFunction, ...
    'DecoderTransferFunction', decoderTransferFunction, ...
    'UseGPU', useGpu);
save('autoenc2.mat', 'autoenc2');
feat2 = encode(autoenc2, feat1);

figure(), plotWeights(autoenc2);
print('exp-f1-ly2','-dpng')


softnet = trainSoftmaxLayer(feat2, labelsTrain, ...
    'MaxEpochs', maxEpochs);
save('softnet.mat', 'softnet');


% Make it 784 * 1000 matrix instead of 1 * 1000
xTest = zeros(28 * 28, numel(dataTest));
for i = 1:numel(dataTest)
    xTest(:,i) = dataTest{i}(:);
end

deepnet = stack(autoenc1,autoenc2,softnet);
y = deepnet(xTest);

classificationError = perform(deepnet, labelsTest, y);


fileID = fopen('exp.txt','w');
fprintf(fileID, '[enc2_layers: %d; enc2_layers: %d, sm_layers: %d]; maxEpochs: %5d, sparsityRegularization: %5.3f, sparsityProportion: %5.3f, classificationError: %5.10e, encoderTransferFunction: %s, decoderTransferFunction: %s\r\n', ...
    hiddenSize1, ...
    hiddenSize2, ...
    hiddenSize3, ...
    maxEpochs, ...
    sparsityRegularization, ...
    sparsityProportion, ...
    classificationError, ...
    encoderTransferFunction, ...
    decoderTransferFunction);
fclose(fileID);

